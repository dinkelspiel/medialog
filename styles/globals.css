/* --- Fonts --- */
@import url("https://fonts.googleapis.com/css2?family=DM+Serif+Display:ital@0;1&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap");

/* --- Tailwind v4 --- */
@import "tailwindcss";

/* ================================
   Theme tokens (Tailwind v4)
   ================================= */
@theme {
  /* container */
  --container-2xl: 1400px;
  --container-padding: 2rem;

  /* fonts */
  --font-dm-serif: "DM Serif Display", serif;
  --font-geist: Geist, sans-serif;

  /* radii */
  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  /* v4-native color tokens (map to your CSS vars)
     NOTE: v4 no longer uses --tw-*-opacity. Keep these as rgb(). */
  --color-base-50: rgb(var(--base-50));
  --color-base-100: rgb(var(--base-100));
  --color-base-200: rgb(var(--base-200));
  --color-base-300: rgb(var(--base-300));
  --color-base-400: rgb(var(--base-400));
  --color-base-500: rgb(var(--base-500));
  --color-base-600: rgb(var(--base-600));
  --color-base-700: rgb(var(--base-700));
  --color-base-800: rgb(var(--base-800));
  --color-base-900: rgb(var(--base-900));
  --color-base-950: rgb(var(--base-950));

  /* The rest of your semantic tokens (using HSL tuples you define below) */
  --color-border: hsl(var(--base-100));
  --color-input: hsl(var(--base-100));
  --color-ring: hsl(var(--base-950));
  --color-background: hsl(var(--white));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--base-50));
  --color-secondary-foreground: hsl(var(--base-900));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--base-500));

  --color-accent: hsl(var(--base-50));
  --color-accent-foreground: hsl(var(--base-900));

  --color-popover: hsl(var(--base-50));
  --color-popover-foreground: hsl(var(--base-950));

  --color-card: hsl(var(--base-50));
  --color-card-foreground: hsl(var(--base-950));

  /* animations (replacing tailwindcss-animate plugin) */
  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;
}

/* ================================
   Keyframes
   ================================= */
@keyframes accordion-down {
  from {
    height: 0;
  }
  to {
    height: var(--radix-accordion-content-height);
  }
}
@keyframes accordion-up {
  from {
    height: var(--radix-accordion-content-height);
  }
  to {
    height: 0;
  }
}

/* Match v3 `container.center: true` behavior */
.container {
  margin-inline: auto;
}

/* Fonts */
@font-face {
  font-family: "Geist";
  src: url("/Geist[wght].ttf") format("truetype");
  font-weight: 100 200 300 400 500 600 700 800 900;
  font-style: normal;
  font-display: swap;
}

/* Utilities you had */
.scrollable-grid-item {
  max-height: calc(100vh - 1.5rem);
  overflow: auto;
}
@media (min-width: 1024px) {
  .lg\:scrollable-grid-item {
    max-height: calc(100vh - 1.5rem);
    overflow: auto;
  }
}
/* Hide scrollbar */
.no-scrollbar::-webkit-scrollbar {
  display: none;
}
.no-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

/* ================================
   Base layer: design tokens
   Define your palette tuples somewhere global:
   - --white, --foreground, etc. are HSL tuples
   - --base-* can be HSL or RGB tuples depending on how you consume them.
   Here we assume:
     * base-* used via rgb(var(--base-*)) for utilities above
     * semantic tokens use hsl(var(--...))
   ================================= */
@layer base {
  :root {
    /* HSL tuples (examples â€” keep yours) */
    --white: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --primary: 11 72% 57%;
    --primary-foreground: 210 40% 98%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    /* Radius */
    --radius: 0.5rem;

    /* ------------------------------------------
       IMPORTANT: define your base-* channel tuples.
       Since @theme maps them with rgb(var(--base-*)),
       these should be comma-separated RGB channels, e.g.:
       255,255,255  (not hsl)
       Replace with your actual values/theme system.
       ------------------------------------------ */
    --base-50: 249, 250, 251;
    --base-100: 243, 244, 246;
    --base-200: 229, 231, 235;
    --base-300: 209, 213, 219;
    --base-400: 156, 163, 175;
    --base-500: 107, 114, 128;
    --base-600: 75, 85, 99;
    --base-700: 55, 65, 81;
    --base-800: 31, 41, 55;
    --base-900: 17, 24, 39;
    --base-950: 2, 6, 23;

    /* Optional: other HSL tuples used above */
    --muted: 210 40% 96.1%;
  }

  .dark {
    /* Swap HSL tuples for dark semantics */
    --white: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    /* Dark RGB channels for your base palette */
    --base-50: 2, 6, 23;
    --base-100: 17, 24, 39;
    --base-200: 31, 41, 55;
    --base-300: 55, 65, 81;
    --base-400: 75, 85, 99;
    --base-500: 107, 114, 128;
    --base-600: 156, 163, 175;
    --base-700: 209, 213, 219;
    --base-800: 229, 231, 235;
    --base-900: 243, 244, 246;
    --base-950: 249, 250, 251;

    --muted: 217.2 32.6% 17.5%;
  }
}

/* Base element defaults */
@layer base {
  * {
    @apply border-base-100;
  }
  body {
    @apply bg-base-50 text-neutral-900;
  }
}
